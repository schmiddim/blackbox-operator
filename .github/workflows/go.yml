name: Build and Push Docker Image
on:
  push:
    branches:
      - master
jobs:
  build_and_test:
    name: Build & Test the Application
    runs-on: ubuntu-latest
    steps:
      - uses: shivanshs9/setup-k8s-operator-sdk@v1
        with:
          version: '^1.39.2'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'
      - name: Create temp directory and run operator-sdk init
        run: |
          TMP_DIR=$(mktemp -d)
          cd $TMP_DIR
          operator-sdk init --domain example.com --repo github.com/example/repo
          cp -r $TMP_DIR/bin $GITHUB_WORKSPACE/ && ls $GITHUB_WORKSPACE/bin
#      - name: Tidy Go modules
#        run: |
#          go mod tidy
#          if [[ -n $(git status --porcelain) ]]; then
#            git config --global user.name "github-actions[bot]"
#            git config --global user.email "github-actions[bot]@users.noreply.github.com"
#            git add go.mod go.sum
#            git commit -m "chore: run go mod tidy"
#            git push
#          else
#            echo "No changes detected"
#          fi
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: go build -v -o operator ./cmd
#      - name: Test
#        run: go test -v -coverprofile cover.out ./...
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v5
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract branch or tag name
        run: |
          REF=$(echo ${GITHUB_REF#refs/*/})
          COMMIT_ID=${GITHUB_SHA}
          if [[ "$REF" == "master" ]]; then
            echo "ref=latest" >> $GITHUB_ENV
          else
            echo "ref=$REF" >> $GITHUB_ENV
          fi
          echo "commit_id=$COMMIT_ID" >> $GITHUB_ENV
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            schmiddim/blackbox-operator:${{ env.ref }}
            schmiddim/blackbox-operator:${{ env.commit_id }}
          platforms: linux/amd64, # linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache